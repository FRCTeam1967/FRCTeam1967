# The file ".wrmakefile" is the template used by the Wind River Workbench to
# generate the makefiles of this project. Add user-specific build targets and
# make rules only(!) in this project's ".wrmakefile" file. These will then be
# automatically dumped into the makefiles.

WIND_HOME := $(subst \,/,$(WIND_HOME))
WIND_BASE := $(subst \,/,$(WIND_BASE))
WIND_USR := $(subst \,/,$(WIND_USR))

all : pre_build main_all post_build

_clean ::
	@echo "make: removing targets and objects of `pwd`"

%IDE_GENERATED%

-include $(PRJ_ROOT_DIR)/*.makefile

-include *.makefile

main_all : external_build $(PROJECT_TARGETS)
	@echo "make: built targets of `pwd`"

# entry point for extending the build
external_build ::
	@echo ""

# main entry point for pre processing prior to the build
pre_build :: $(PRE_BUILD_STEP) generate_sources
	@echo ""

# entry point for generating sources prior to the build
generate_sources ::
	@echo ""

# main entry point for post processing after the build
post_build :: $(POST_BUILD_STEP) deploy_output
	@echo Janky Deploy-Helper Executing - Copying output to c:\\jankyoutput\\janky.out
	@mkdir -p c:/jankyoutput
	@echo "junk file" >c:/jankyoutput/junk.out
	@rm c:/jankyoutput/*
# RMW - Not entirely proud here. PROJECT_TARGETS is multiple files - the the final
#       output .out file. So copy them all, and then copy *.out to janky.out which
#       only works because there will only be one .out file. If for some reason,
#       the build directory had multiple .out files, this post-build would end in an error.
# A real fix would be to find the variable name that contains the final .out file ONLY.
	@cp $(PROJECT_TARGETS) c:/jankyoutput
	@cp c:/jankyoutput/*.out c:/jankyoutput/janky.out
#	ls -l c:/jankyoutput

# entry point for deploying output after the build
deploy_output ::
	@echo ""

clean :: external_clean $(CLEAN_STEP) _clean

# entry point for extending the build clean
external_clean ::
	@echo ""
