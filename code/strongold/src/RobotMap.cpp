// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveTrainRightMotor;
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftMotor;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive;
std::shared_ptr<SpeedController> RobotMap::armMotor;
std::shared_ptr<AnalogPotentiometer> RobotMap::armPot;
std::shared_ptr<SpeedController> RobotMap::ballIntakeMotor;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainRightMotor.reset(new Victor(4));
    lw->AddActuator("DriveTrain", "Right Motor", std::static_pointer_cast<Victor>(driveTrainRightMotor));
    
    driveTrainLeftMotor.reset(new Victor(1));
    lw->AddActuator("DriveTrain", "Left Motor", std::static_pointer_cast<Victor>(driveTrainLeftMotor));
    
    driveTrainRobotDrive.reset(new RobotDrive(driveTrainLeftMotor, driveTrainRightMotor));
    
    driveTrainRobotDrive->SetSafetyEnabled(true);
        driveTrainRobotDrive->SetExpiration(0.1);
        driveTrainRobotDrive->SetSensitivity(0.5);
        driveTrainRobotDrive->SetMaxOutput(1.0);

    armMotor.reset(new Victor(3));
    lw->AddActuator("Arm", "Motor", std::static_pointer_cast<Victor>(armMotor));
    
    armPot.reset(new AnalogPotentiometer(0, 1.0, 0.0));
    lw->AddSensor("Arm", "Pot", armPot);
    
    ballIntakeMotor.reset(new Talon(5));
    lw->AddActuator("Ball Intake", "Motor", std::static_pointer_cast<Talon>(ballIntakeMotor));
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
